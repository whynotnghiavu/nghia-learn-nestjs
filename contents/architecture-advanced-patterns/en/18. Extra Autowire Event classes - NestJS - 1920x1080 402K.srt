1
00:00:00,750 --> 00:00:01,890
In the previous lesson

2
00:00:02,100 --> 00:00:06,347
we've seen how he can d serialize
events and pushed them onto the of at bus.

3
00:00:06,450 --> 00:00:06,900
However

4
00:00:07,050 --> 00:00:10,560
to map serialized events to
their corresponding event classes

5
00:00:10,830 --> 00:00:14,925
we had to manually register each
event class in the event to serializer.

6
00:00:15,030 --> 00:00:17,260
Get event class by type method.

7
00:00:17,850 --> 00:00:22,050
While this might not be a big deal for
smaller applications it can become a bit

8
00:00:22,080 --> 00:00:24,610
tedious when the
number of events gross.

9
00:00:25,290 --> 00:00:26,040
And this lesson

10
00:00:26,340 --> 00:00:30,373
we'll see how we can auto wire
event classes using custom decorators.

11
00:00:31,020 --> 00:00:31,620
To begin.

12
00:00:32,040 --> 00:00:34,860
Let's create a new file
called event cls registry

13
00:00:35,160 --> 00:00:36,840
inside of the
event store folder.

14
00:00:37,170 --> 00:00:39,250
Let's add the
following code inside.

15
00:00:40,680 --> 00:00:41,730
As we can see here

16
00:00:41,850 --> 00:00:44,760
this is a simple class that
provides to static methods

17
00:00:45,000 --> 00:00:46,140
add and get.

18
00:00:46,650 --> 00:00:51,270
The ad method is used to register an
event class and the get method is used to

19
00:00:51,270 --> 00:00:53,890
retrieve an event
class by its name.

20
00:00:54,540 --> 00:00:56,130
Since both methods are static

21
00:00:56,370 --> 00:01:00,690
we can use them without
instantiating the class

22
00:01:00,690 --> 00:01:01,690
so we can live outside
of the nes js container.

23
00:01:02,401 --> 00:01:03,660
With this in place

24
00:01:03,840 --> 00:01:07,650
let's create a new directory called
decorators inside of the shared folder

25
00:01:07,890 --> 00:01:09,840
and let's create a
new file they're called

26
00:01:09,960 --> 00:01:13,060
auto wired event
decorator dot t s.

27
00:01:13,890 --> 00:01:16,560
Here we're going to create
a custom class decorator

28
00:01:16,800 --> 00:01:20,220
it will be used to auto register
a target class in the event

29
00:01:20,520 --> 00:01:21,880
a less registry.

30
00:01:22,260 --> 00:01:24,700
Were achieved this let's
add the following code.

31
00:01:25,950 --> 00:01:26,370
Great.

32
00:01:26,970 --> 00:01:27,480
Now

33
00:01:27,630 --> 00:01:32,010
let's head over to the alarm created
event ts file must add the auto wired event

34
00:01:32,010 --> 00:01:33,729
decorator to the
alarm created of a

35
00:01:33,833 --> 00:01:34,833
class.

36
00:01:36,180 --> 00:01:37,170
Last but not least.

37
00:01:37,650 --> 00:01:42,060
Let's open up the event d serializer ts
file and let's update the get event class by

38
00:01:42,060 --> 00:01:45,580
type method to use the
event seal as registry.

39
00:01:51,270 --> 00:01:51,900
And that's it.

40
00:01:52,380 --> 00:01:56,940
Now regardless of how many
events we have we can simply

41
00:01:56,940 --> 00:01:58,530
add the auto wired event
decorator to the event class

42
00:01:58,860 --> 00:02:02,800
and it will be automatically
registered to the event cls registry.

43
00:02:03,000 --> 00:02:03,780
To see everything

44
00:02:03,900 --> 00:02:04,440
action

45
00:02:04,680 --> 00:02:08,890
etc or to our terminal and test
everything out by creating a new alarm.

46
00:02:09,900 --> 00:02:11,700
Let's switch to the
other terminal window

47
00:02:11,970 --> 00:02:16,120
and as we can see the event handler
has been successfully invoked fantastic.

48
00:02:16,890 --> 00:02:18,600
With everything
we've done this lesson

49
00:02:18,870 --> 00:02:23,490
we now have the ability
to automatically auto wire

50
00:02:23,490 --> 00:02:24,870
classes instead of manually
doing this over and over again

51
00:02:24,990 --> 00:02:25,990
great.

