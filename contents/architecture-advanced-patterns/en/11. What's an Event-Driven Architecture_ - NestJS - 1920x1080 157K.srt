1
00:00:01,021 --> 00:00:03,270
Event driven
architecture or edi a.

2
00:00:03,660 --> 00:00:07,860
Is a software architecture
powder that revolves around

3
00:00:07,860 --> 00:00:09,400
events as the main driving
force for communication

4
00:00:09,540 --> 00:00:11,860
between different
components of a system.

5
00:00:12,060 --> 00:00:14,430
It promotes the
production detection

6
00:00:14,580 --> 00:00:17,530
consumption of and
reactions to events.

7
00:00:18,060 --> 00:00:18,630
And event.

8
00:00:19,020 --> 00:00:21,540
Can be defined as a signal
different change in state.

9
00:00:21,900 --> 00:00:26,610
Such as user actions data updates
messages from external services

10
00:00:26,820 --> 00:00:28,060
or errors.

11
00:00:28,890 --> 00:00:32,070
For example things such as
a user creating a new account.

12
00:00:32,460 --> 00:00:33,750
A new order being placed

13
00:00:34,050 --> 00:00:35,670
or a new alarm being created

14
00:00:35,790 --> 00:00:36,790
etc.

15
00:00:37,020 --> 00:00:40,900
Event driven architecture typically
consists of three main components.

16
00:00:41,220 --> 00:00:42,520
Event producers.

17
00:00:42,750 --> 00:00:43,830
Event consumers

18
00:00:44,070 --> 00:00:45,450
and an event bus

19
00:00:45,690 --> 00:00:47,680
a k a event burger.

20
00:00:49,293 --> 00:00:50,310
Event producers

21
00:00:50,460 --> 00:00:53,640
are responsible for publishing
events to the event bus.

22
00:00:54,000 --> 00:00:56,500
They act as the
source of events.

23
00:00:56,760 --> 00:01:00,390
Event consumers subscribed
to events from the event bus.

24
00:01:00,720 --> 00:01:03,130
They act as the sink of events.

25
00:01:03,450 --> 00:01:06,330
The event bus itself is a
communication channel

26
00:01:06,570 --> 00:01:09,730
that connects event
producers and event consumers.

27
00:01:10,560 --> 00:01:12,810
And event bus acts
as a message broker

28
00:01:12,990 --> 00:01:16,840
that receives events from producers
and distributes them to consumers.

29
00:01:17,010 --> 00:01:18,420
It can be a message queue.

30
00:01:18,810 --> 00:01:20,520
A centralized event service

31
00:01:20,700 --> 00:01:22,690
or a message broker itself.

32
00:01:23,190 --> 00:01:25,890
A vendor of and architecture
has several advantages

33
00:01:26,100 --> 00:01:27,400
such as.

34
00:01:27,540 --> 00:01:28,410
Loose coupling

35
00:01:28,560 --> 00:01:32,520
between components since consumers
don't need to know about the producers

36
00:01:32,760 --> 00:01:34,240
and vice versa.

37
00:01:34,380 --> 00:01:35,280
Scale ability

38
00:01:35,580 --> 00:01:38,970
since we can easily add more
consumers to increase the throughput

39
00:01:39,210 --> 00:01:40,960
and processing capabilities.

40
00:01:42,210 --> 00:01:43,980
And a synchronous processing.

41
00:01:44,310 --> 00:01:47,470
Since consumers can
process events a synchronously

42
00:01:47,580 --> 00:01:49,840
without blocking
the entire system.

43
00:01:50,430 --> 00:01:51,000
However

44
00:01:51,270 --> 00:01:54,220
as with everything in life
and software engineering.

45
00:01:54,330 --> 00:01:55,440
A venture of and architecture

46
00:01:55,560 --> 00:01:58,270
also has some drawbacks such as.

47
00:01:58,560 --> 00:02:00,070
Overall complexity

48
00:02:00,210 --> 00:02:05,260
since maintaining a sophisticated event
driven system can be quite challenging.

49
00:02:05,640 --> 00:02:07,690
Data consistency complexity.

50
00:02:07,890 --> 00:02:10,450
Since events are
processed a synchronously.

51
00:02:10,920 --> 00:02:13,780
This usually means we're
dealing with eventual consistency.

52
00:02:14,640 --> 00:02:16,960
And transactional integrity.

53
00:02:17,010 --> 00:02:20,260
Since it can be quite difficult
to implement transactions

54
00:02:20,370 --> 00:02:22,930
at span across
multiple services.

55
00:02:23,370 --> 00:02:24,150
Overall

56
00:02:24,300 --> 00:02:28,410
a vendor of and architecture is a very
powerful approach to building distributed

57
00:02:28,530 --> 00:02:29,310
scalable

58
00:02:29,490 --> 00:02:33,630
and flexible system second efficiently
handle complex business logic

59
00:02:33,810 --> 00:02:35,560
in real time processing.

60
00:02:36,180 --> 00:02:37,080
On the other hand

61
00:02:37,290 --> 00:02:40,740
it also comes with some challenges
that need to be carefully considered

62
00:02:40,980 --> 00:02:44,170
before deciding to use it
with any particular project.

63
00:02:44,400 --> 00:02:48,120
So make sure to weigh
the pros and cons against

64
00:02:48,120 --> 00:02:48,480
any system you're
considering adding it to.

65
00:02:48,840 --> 00:02:49,470
As you should

66
00:02:49,650 --> 00:02:51,880
with any architectural approach.

