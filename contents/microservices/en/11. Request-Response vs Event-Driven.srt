1
00:00:00,750 --> 00:00:01,560
In this lesson

2
00:00:01,830 --> 00:00:06,180
let's dive into an learn
about the differences between

3
00:00:06,180 --> 00:00:07,500
the request response and
event driven communication styles

4
00:00:07,800 --> 00:00:09,971
and when to use
each one of them.

5
00:00:10,950 --> 00:00:15,060
The request response message thou is
useful when you need to exchange messages

6
00:00:15,060 --> 00:00:17,010
between various
external services.

7
00:00:17,370 --> 00:00:18,420
With this paradigm

8
00:00:18,720 --> 00:00:21,600
you can be certain that a service
has actually received the message

9
00:00:21,750 --> 00:00:23,310
without the need to
manually implement

10
00:00:23,520 --> 00:00:24,630
message acknowledgment

11
00:00:24,780 --> 00:00:26,470
or act protocol.

12
00:00:27,720 --> 00:00:29,430
Like any software
development paradigm

13
00:00:29,640 --> 00:00:31,170
nothing is a silver bullet.

14
00:00:31,530 --> 00:00:35,580
Try to keep in mind that the request response
paradigm is not always the best choice.

15
00:00:35,970 --> 00:00:36,690
For example

16
00:00:36,960 --> 00:00:41,190
trimming transporters that use
log base persistence such as kafka

17
00:00:41,430 --> 00:00:43,890
are optimized for solving
a different range of issues

18
00:00:44,100 --> 00:00:44,760
or aligned

19
00:00:44,940 --> 00:00:46,990
with an event
messaging paradigm.

20
00:00:47,970 --> 00:00:50,340
To enable the request
response message type.

21
00:00:50,670 --> 00:00:52,770
Ness create to logical channels

22
00:00:53,070 --> 00:00:55,590
one is responsible for
transferring the data.

23
00:00:55,980 --> 00:00:58,360
While the other waits
for incoming responses.

24
00:00:58,860 --> 00:01:01,290
Are some underlying
transports such as nats

25
00:01:01,590 --> 00:01:04,960
this dual channel support
is provided out of the box.

26
00:01:05,460 --> 00:01:09,000
Or others nest compensates by me
manually creating separate channels

27
00:01:09,240 --> 00:01:10,800
that can be an overhead for this

28
00:01:10,950 --> 00:01:11,520
so

29
00:01:11,730 --> 00:01:14,610
if you do not require a
request response message thou

30
00:01:14,880 --> 00:01:17,620
you should consider using
the event based method.

31
00:01:17,940 --> 00:01:21,330
To create a message handler based
on their request response paradigm

32
00:01:21,540 --> 00:01:24,100
we can use the message
pattern decorator.

33
00:01:24,330 --> 00:01:28,530
While the request response method is ideal
for exchanging messages between services.

34
00:01:28,920 --> 00:01:32,010
It is less suitable when your
message thou is event based.

35
00:01:32,400 --> 00:01:33,090
For example.

36
00:01:33,480 --> 00:01:36,820
When you just want to publish
events without waiting for a response.

37
00:01:37,140 --> 00:01:37,890
In that case.

38
00:01:38,220 --> 00:01:42,120
You do not need the
overhead required by

39
00:01:42,120 --> 00:01:43,120
request response for
maintaining two channels.

40
00:01:44,160 --> 00:01:47,940
Suppose you would like to simply notify
another service that a certain condition has

41
00:01:47,940 --> 00:01:49,350
occurred in this
part of the system.

42
00:01:49,830 --> 00:01:51,000
If that's your use case

43
00:01:51,240 --> 00:01:54,180
then you should most likely use
the event based message style.

44
00:01:54,750 --> 00:01:56,100
To declare an event handler

45
00:01:56,400 --> 00:01:59,080
we can simply as the
event pattern decorator.

46
00:02:00,090 --> 00:02:04,750
Nest provides several built-in
transport strategies including http.

47
00:02:04,890 --> 00:02:05,490
Nats

48
00:02:05,730 --> 00:02:06,730
kafka.

49
00:02:06,780 --> 00:02:08,610
Rabbit m q and many others.

50
00:02:09,120 --> 00:02:12,360
Each of these transport strategies
can be used for both request response

51
00:02:12,690 --> 00:02:14,670
and event based
communication styles

52
00:02:15,060 --> 00:02:18,340
but some of them are better
suited for one not the other.

53
00:02:18,720 --> 00:02:19,410
For example

54
00:02:19,590 --> 00:02:24,270
http is a request response
protocol so it's better

55
00:02:24,270 --> 00:02:25,320
suited for a request
response communication style.

56
00:02:25,890 --> 00:02:26,550
On the other hand

57
00:02:26,850 --> 00:02:28,320
Africa is a message broker

58
00:02:28,590 --> 00:02:32,470
so it's better suited for an
event based communication style.

59
00:02:33,210 --> 00:02:34,170
With ness js

60
00:02:34,380 --> 00:02:38,610
we can also integrate with other protocols
and message brokers by creating our own

61
00:02:38,820 --> 00:02:40,350
custom transport strategies.

62
00:02:40,680 --> 00:02:41,220
However

63
00:02:41,430 --> 00:02:44,130
we won't be diving into
this topic in this course so.

64
00:02:44,460 --> 00:02:46,020
If you're interested in
learning more about this

65
00:02:46,290 --> 00:02:48,666
check out the official
nastiest documentation

66
00:02:48,810 --> 00:02:51,460
in a link can be found
rebel the course video.

